# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iCLc85azHwDlg8owviGwN4qNCHqu1TG7
"""

#-----------------Reto XalDigital análisis de datos con Python-------------------#
import requests
import pandas as pd
#---1. Conectarse al enlace
url = "https://api.stackexchange.com/2.2/search?order=desc&sort=activity&intitle=perl&site=stackoverflow"
#Transforma la información del URL a un objeto JSON.
req = requests.get(url)
obj_json= req.json()
#Transforma la información del URL a un data Frame 
df = pd.json_normalize(obj_json['items'])

#----------------------Pregunta 2.-
#Cuenta los valores de la columna 'is_answered'.
answ = df[ ["is_answered"] ].value_counts()


#----------------------Pregunta 3.-
#-Obtiene el valor minimo de view_count
min_num_vistas = df[df["view_count"] == df["view_count"].min()]
#-Selecciono el view_count  de la fila en posición 0
res = min_num_vistas["owner.reputation"].iloc[0]
#-asigno al data frame el view_count que tenga lo mismo que lo que contiene res
min_num_vistas = df[df["owner.reputation"] == res]
#-a un nuevo data frame le asigno los datos exactos que deseo mostrar
menor_num_vistas = min_num_vistas[["question_id", "view_count", "title", "link"]]

#----------------------Pregunta 4.-
#-Obtiene el valor minimo de creation_date
Res_Mas_Vieja = df[df["creation_date"] == df["creation_date"].min()]
#-Selecciono el creation_date  de la fila en posición 0
res = Res_Mas_Vieja["owner.reputation"].iloc[0]
#-asigno al data frame el creation_date que tenga lo mismo que lo que contiene res
Res_Mas_Vieja = df[df["owner.reputation"] == res]
#-a un nuevo data frame le asigno los datos exactos que deseo mostrar
Res_Mas_Vieja_M = Res_Mas_Vieja[["question_id", "creation_date", "title", "link", "owner.user_id"]]

#-Obtiene el valor maximo de creation_date
Res_Mas_Nueva = df[df["creation_date"] == df["creation_date"].max()]
#-Selecciono el creation_date  de la fila en posición 0
res = Res_Mas_Nueva["owner.reputation"].iloc[0]
#-asigno al data frame el creation_date que tenga lo mismo que lo que contiene res
Res_Mas_Nueva = df[df["owner.reputation"] == res]
#-a un nuevo data frame le asigno los datos exactos que deseo mostrar
Res_Mas_Nueva_M = Res_Mas_Nueva[["question_id", "creation_date", "title", "link", "owner.user_id"]]

#----------------------Pregunta 5.-
#-Obtiene el valor maximo de owner.reputation
Max_reputation = df[df["owner.reputation"] == df["owner.reputation"].max()]
#-Selecciono el owner.reputation  de la fila en posición 0
res = Max_reputation["owner.reputation"].iloc[0]
#-asigno al data frame el owner.reputation que tenga lo mismo que lo que contiene res
Max_reputation = df[df["owner.reputation"] == res]
#-a un nuevo data frame le asigno los datos exactos que deseo mostrar
Max_reputation_M = Max_reputation[["owner.reputation", "owner.user_id", "owner.display_name"]]

#-----------Muestra en consola de los resultados --------------------#
print("Pregunta 2.-")
print("2. Obtener el número de respuestas contestadas y no contestadas:")
count = 0
for i in answ:
    if(answ.index[count][0] == True):
        var = "contestadas"
    else:
        var = "no contestadas"
    print("Total %s: %i" % (var, i) )
    count += 1

print()
print("Pregunta 3.-")
print("3. Obtener la respuesta con menor número de vistas")
for i in menor_num_vistas.keys():
    print("%s: %s" % (i, menor_num_vistas[i].values[0]) )

print()
print("-----------------Pregunta 4.-----------------")
print("Obtener la respuesta más vieja")
for i in Res_Mas_Vieja_M.keys():
    print("%s: %s" % (i, Res_Mas_Vieja_M[i].values[0]) )
print("\nObtener la respuesta más actual")
for i in Res_Mas_Nueva_M.keys():
    print("%s: %s" % (i, Res_Mas_Nueva_M[i].values[0]) )
print("----------------------------------------------")


print()
print("Pregunta 5.-")
print("5. Obtener la respuesta del owner que tenga una mayor reputación:")
for i in Max_reputation_M.keys():
    print("%s: %s" % (i, Max_reputation_M[i].values[0]) )


print("\nMejia Cortez Lizbeth Gisselle")